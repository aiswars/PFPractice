maven project
=-----------------
pom.xml dependencies
----------------------
notesAmzn.txt
--------------------------
pageobject model
---------------------------
packages in src/main/java
base
errorcollectors
liusteners
pages.actions
pages.locators
utitlities

--------------------------
packages in src/test/java
rough
testcases

--------------------------
folders in src/test/resources
excel
executables
extentconfig
logs
properties
runner

--------------------------
to do :
testNgxml 
<testresources> in pom.xml
-----------------------------------

get the locators from amazon website pages to a rough page 

verifying the css on console>>  $$('cssSelector') ---  $$('#ap_password') if length 1 then only one element
css>>  a[id='nav-orders'] span[class='nav-line-1'] >>>  $$('a[id="nav-orders"] span[class="nav-line-1"]')

verifying xpath on console - &x("xpath") or  &x('xpath')  //x loweerCase
	$x("//input[@id='signInSubmit']")  //worked
	$x('//input[@id="signInSubmit"]') //worked
	
	$x('//input[@id='signInSubmit']') //wont work
	$x('//input[@id='signInSubmit']') //wont work
	
	-----------------------------------------------
	lec 109
HomePage.java >> methods for the navigayions from the home page
psvm main class in rough package
driver, get site, get locator/actins from HomePage by importing HomePage and HomePage Object
OR by PageFactory initelements // initializing the eleements by PageFactory class passing driver instance and this class instance


	//System.setProperty("webdriver.chrome.driver", "C:\\Users\\Aiswa\\eclipse-workspaceN\\BankUsers\\Drivers\\chromedriver.exe");
    System.setProperty("webdriver.chrome.driver", System.getProperty("user.dir")+"\\src\\test\\resources\\executables\\chromedriver.exe");
	WebDriver driver =  new ChromeDriver();
	driver.get("https://www.amazon.com/");
	
	ctrl shift O to import packages

AmazonTest.java & HomePage.java executed >> Run as Java Application
============================================================================================
	lec 110
copied the initialization from project3 page.java baseclass

also in this project initialization are not doing in the constructor of  base class - page.java constructor
instead its in a method initConfiguartion in Page.java baseclass
each test is independent - its not navogating from one page to another. testing one page then closing the browser and then in next test opening next page and testing it and closing it-
in project3 initialization is in page.java baseclass constructor and tests are not indepenedent.naviagting from one page to another


-----------------------------------------------------------
constants.java
BasePage.java
import apache log4j
testdata.xls >> excel file -testdata.xls to excel - - in src/test/reso
excelReader >> copied updtaed excelReader.java to utilities - in main/java
ExtentManager >> copied updated ExtentManager.java to utilties  in main/java sec 13 and sec 15 are same
reportsCOnfig >> copied reportsCOnfig.java to extenCOnfig for the extentreports - in src/test/reso
log4j.properties >> copied updtaed log4j.properties to properties- in src/test/reso
Utilities.java >> created a new class Utilities.java in utiltities pkg in main/java
ExtentListeners.java >> copied to listeners pkg - in src/main/java

ExtentManager.java >> chnaged the name and details to display
in pagefactory implementation of wait is different

--------------------------------------------------------------
HomePageLocators.java >> separated the locators to this class
and in HomePage.java - its constructor is created and in constructor initalize the PageFactory -- // initializing the eleements by PageFactory class 
passing driver instance and this class instance
public class HomePage extends BasePage //extends BasePage to get the driver instance from BasePage to HoomePage
AmazonTest.java & HomePage.java, HomePageLocators.java executed >> Run as Java Application

	System.setProperty("webdriver.chrome.driver", System.getProperty("user.dir")+"src\\test\\resources\\executables\\chromedriver.exe");
	WebDriver driver =  new ChromeDriver();
	driver.get("https://www.amazon.com/");
	System.out.println("hello");
	}
above code in AmazonTest.java changed to below code // lect 113 added // Added searchbox click in HomePage
	
		BasePage.initConfiguration();
		HomePage home = new HomePage();
		home.gotoSignIn();			
		System.out.println("done");
		BasePage.quitBrowser();
		
		AmazonTest - Run As JavaApplication 
---------------------------------------------------------------------------
lec 111
		AjaxElementLocatorFactory factory = new AjaxElementLocatorFactory(driver,10); //a lazy load concept in PF design to identify webeelements only when they are in any oprerations
		once the elemnt is found it will comeout of that time- wont wait to timeout.
		
		AjaxElementLocatorFactory factory = new AjaxElementLocatorFactory(driver,10); //constructor with parameters - driver and time in secs
		PageFactory.initElements(factory, this.home); //pass the reference factory
		
		hellolocation, returns&Orders
		
=-------------------------------------------------------------------------------
lec 113
If there is a top Menu in the applicaiton which is available from all the page in the application then make that menu as common utiltiy.
 Create a class TopMenu in base epackage. >> project3
 
TopMenu ISA Page???  NO >> so no inheritance no extends Page
HomePage HASA TopMenu
AccountPage HASA TopMenu
so every page HASA TopMenu >> Page HASA TopMenu  - encapsulation

here TopMenu is not in base pkg		---in Page

Create a TopNavigation class and TopNavigationLocators class
object of TopNavogationLocators in constructor of TopNavigation class

TopMenu ISA Page???  NO >> so no inheritance no extends Page
every page HASA TopMenu >> Page HASA TopMenu  - encapsulation
in basePage.java class
public static TopNavigation topNavigation; //for creating object of TopNavigation
in initConfiguration object is created >> 	topNavigation = new TopNavigation(); //object of TopNavigation --driver to get driver in TopNavigation class

Initconfiguartion- @9.00 lec 113 when the driver is initialized TopNavigation object is created, the constructor is called and this construcotr sets the PageFactoryInitelements and the topNavigationLocators object will be created,
when PageFactoryinitelements are inintialized the leements are accessible using the topNavigationLocator object.


o TopMenu can be implemented in every page class - encapsulated >> TopMenu topMenu = new TopMenu(); //then the methods with this object ref
BUt instead of giving in all page classes it can be given in the SuperClass Page CLass. --static TopMenu menu
In testclass>>  LoginTest class >> Page.menu..... >> Page & TopMenu are two classes in base pkg. -- menu- static TopMenu menu
LoginTest class>> Page.menu.gotoAccounts(); //will look in TopMenu Page for gotoAccounts() mehtod

-------------------------------------------------------------------

TopNavogationLocators -- add locators
TopNavigation- add methods 
----------------------------------------------
lect 113
Signinpage and SigninPageLocators
add locators of elements in siginpage to signinpageLocators class
and same way as above for Homepage - create construcotor in signinPage and create object for signinpageLocators and iniliaze PF in signinPage.
In Page Class :
1. constructor of the class
2. Object for the locators class
3. PageFactoryInitElements() method
4. extends BasePage class for the same driver instance from the base class.

signinTest class - indepenedant test
public class SgninTest {

	public static void main(String[] args) {
		
		BasePage.initConfiguration();
		HomePage home = new HomePage();
		SigninPage signin =  home.gotoSignIn(); //gototSignin responsible for taking to Signinpage , hence return type is SigninPage in gotoSignin method. signinPage ref is given here for the object creation of signinPage receiving the returned object from gotoSignin mehtos
		signin.doSignIn();
		System.out.println("SearchingAnItem done");
		BasePage.quitBrowser();
	}

1. initConfigurayion is called >> driver instance created, website opned..
2. HomePage object created and accessed the gotoSignin method
3. gototSignin responsible for taking to Signinpage , hence return type is SigninPage in gotoSignin method.
4. signinPage ref is given here for the object creation of signinPage receiving the returned object from gotoSignin mehtod.
5. in signinPage class>> when the signinPage Object is created the constructor is called and PFinintlazation is done, and then the signinPageLocators object is 
 created and the elemnets are accssible using this object
	

SgninTest - Run As JavaApplication

Added searchbox click in HomePage  //AmazonTest >>HomeSearchTest.java in testcases pkg


----------------------------------------------------------------
lec 114

convert the tests in rough pkg to testng tests in testcases - copy the class files and paste in testcases pkg.
testngxml file - pass the tests to the testng xml file
COnvert Project > TestNg> COnvert to TestNg -- add the testNgxml file to runner folder in src/test/resources
Add the testcases classes <test><class> in tetsngxml file

Run As TestNg Suite - no errors - both tests run successfully
Refresh testuotput folder to check the reports - check >> index.html and emailablereport.html in testoutput folder
also testwise html files in Suite folder - AmazonSuiteFolder/HomeSearchTest.html and SigninTest.html
-----------------------------------------------------------------------------------------------------

 Need to add the listeners 
 
 <listeners>
		<listener class-name="com.w2a.listeners.CustomListeners" />
		<listener class-name="com.w2a.errorcollectors.TestListenerAdapter" />
		<listener class-name="org.uncommons.reportng.HTMLReporter" />
		<listener class-name="org.uncommons.reportng.JUnitXMLReporter" />
	</listeners>
	
Need to add the listeners in tetsng xml file -
added 

		<listener class-name="org.uncommons.reportng.HTMLReporter" />
		<listener class-name="org.uncommons.reportng.JUnitXMLReporter" />
		
Run As TestNg Suite - no errors - both tests run successfully
Refresh tesoutput folder to check the reports - html folder added- check >> index.html in html folder
  
added scrrenshots(manually created and added to understand)of the reports in rough pkg >>rough/file/...

----------------------------------------------------------------------
lec 115

@FindBy
	@FindBys - 
	@FindAll
	
	@FindBys({
		@FindBy(css = ".cols-nested.flight-date-fieldset.total-children-2"), //first locate this block/part/section then locate below element in this part
		@FindBy(id = "flight-age-select-1") //look in above section not the entire page
	})
	public WebElement firstAge;
	@FindAll({
		@FindBy(css = "#flight-age-select-222"), //locate either this
		@FindBy(id = "flight-age-select-2")//OR locate this if above cant be located
	})




if asserts fails, the execution in that method will be terminated and go to next method
so it will fail to report if multiple failures are there in that method as it wont execute the rest of the code from the first failure.
so to add/check muliple failures use softAsseetions. this wont terminsate the execuiton , it will show the failure and will be added to the repaorts as well.
SoftAssertions are assertions in trycatcg blck. so if a failure happens instead of throwing the error and terminating the execution the erroe is caught in catch block with userdfeined codes it is handled- so the execution continues and multiple failures can be handled this way.
each assert condition are in each verify methods with try catch - this is in a separate utility class file then this integrated witht testNg.
added in src/main/java/errorcollectors pkg
SoftAsseetions can be integrated with testng listeners.
TestListenerAdapter - IInvokedMethodListener is the interfcae
ErrorCollector.java and TestListenerAdapter.java classes in ErrorCollectors pkg
add this classname in testng xml file in <listeners> tag -- 	<listener class-name="com.w2a.errorcollectors.TestListenerAdapter" />
addVerificationFailure() - a method in ErrorCollector.java class --using List interface

softAssertions using listeners in  lect 115 -check lect 18 in proj1

-----------------------------------------
lec 115 
sotAssertions userdefined class-- errorcollectors pkg
utility methods for softassertions >>errorcollectors pkg - for softAssertions -added in src/main/java/errorcollectors pkg.
this is a listener - to invoke this listener need to call errorcollector class in listeners in testng xml file
errorcollector class listen to the test and once error is occured it will add to the reports without breaking the execution.

change the package name -- com.w2a.errorcollectors;


--------------------------------------------------------
Reports >> manually added in rough pkg - to understand and learn
1. testngxml >>> 
Run As TestNg Suite - no errors - both tests run successfully
Refresh testuotput folder to check the reports - check >> index.html and emailablereport.html in testoutput folder
also testwise html files in Suite folder - AmazonSuiteFolder/HomeSearchTest.html and SigninTest.html

2. listeners added - HTMLReporter class
<listener class-name="org.uncommons.reportng.HTMLReporter" />
		<listener class-name="org.uncommons.reportng.JUnitXMLReporter" />
		
Run As TestNg Suite - no errors - both tests run successfully
Refresh tesoutput folder to check the reports - html folder added- check >> index.html in html folder
  
added scrrenshots(manually created and added to understand)of the reports in rough pkg >>rough/file/...

